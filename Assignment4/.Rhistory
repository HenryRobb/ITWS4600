setwd("~/zzzJun/itws4600/ITWS4600/Assignment4")
source("~/zzzJun/itws4600/ITWS4600/Assignment4/finalProject_svm_script.R", echo=TRUE)
train_cols <- colnames(train_features)
test_cols <- colnames(test_features)
missing_cols <- setdiff(train_cols, test_cols)
for (col in missing_cols) {
test_features[[col]] <- 0
}
# Ensure the order of columns in test_features is the same as in train_features
test_features <- test_features[, train_cols]
# Make predictions on the test set
prediction_svm_radial <- predict(svm_model_radial, test_features)
# Evaluate the model
cm <- as.matrix(table(Actual = test_target, Predicted = prediction_svm_radial))
cm
n = sum(cm) # number of instances
nc = nrow(cm) # number of classes
diag = diag(cm) # number of correctly classified instances per class
rowsums = apply(cm, 1, sum) # number of instances per class
colsums = apply(cm, 2, sum) # number of predictions per class
p = rowsums / n # distribution of instances over the actual classes
q = colsums / n # distribution of instances over the predicted
correctly_classified <- sum(diag(cm))
accuracy <- correctly_classified / n
recall = diag / rowsums
precision = diag / colsums
f1 = 2 * precision * recall / (precision + recall)
data.frame(precision, recall, f1, accuracy)
library(reshape2)
# Convert the confusion matrix to a data frame for ggplot
cm_df <- as.data.frame(cm)
colnames(cm_df) <- c("Predicted", "Actual", "Count")
cm_df <- as.data.frame.matrix(cm)
cm_df$Actual <- rownames(cm_df)
cm_melted <- melt(cm_df, id.vars = "Actual", variable.name = "Predicted", value.name = "Count")
# Create the heatmap
ggplot(data = cm_melted, aes(x = Predicted, y = Actual, fill = Count)) +
geom_tile() +
geom_text(aes(label = Count), vjust = 1) +
scale_fill_gradient(low = "white", high = "steelblue") +
theme_minimal() +
labs(title = "Confusion Matrix", fill = "Count")
metrics_df <- data.frame(
Metric = c("Accuracy", "Precision (FALSE)", "Precision (TRUE)", "Recall (FALSE)", "Recall (TRUE)", "F1 (FALSE)", "F1 (TRUE)"),
Value = c(accuracy, precision[1], precision[2], recall[1], recall[2], f1[1], f1[2])
)
ggplot(data = metrics_df, aes(x = Metric, y = Value, fill = Metric)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Value, 2)), vjust = -0.3) +
ylim(0, 1) +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank()) +
labs(title = "Performance Metrics", y = "Value", fill = "Metric") # Keep y-axis label
# Create the heatmap
ggplot(data = cm_melted, aes(x = Predicted, y = Actual, fill = Count)) +
geom_tile() +
geom_text(aes(label = Count), vjust = 1) +
scale_fill_gradient(low = "white", high = "steelblue") +
theme_minimal() +
labs(title = "Confusion Matrix", fill = "Count")
